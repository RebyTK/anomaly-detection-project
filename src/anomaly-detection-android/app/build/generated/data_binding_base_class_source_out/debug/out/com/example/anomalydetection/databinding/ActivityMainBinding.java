// Generated by view binder compiler. Do not edit!
package com.example.anomalydetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.anomalydetection.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RecyclerView anomaliesRecyclerView;

  @NonNull
  public final TextView lastUpdateTextView;

  @NonNull
  public final TextView resultTextView;

  @NonNull
  public final TextView sensorDataTextView;

  @NonNull
  public final Button startDetectionButton;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final Button stopDetectionButton;

  @NonNull
  public final SeekBar thresholdSeekBar;

  @NonNull
  public final TextView thresholdValueTextView;

  @NonNull
  public final TextView titleTextView;

  private ActivityMainBinding(@NonNull ScrollView rootView,
      @NonNull RecyclerView anomaliesRecyclerView, @NonNull TextView lastUpdateTextView,
      @NonNull TextView resultTextView, @NonNull TextView sensorDataTextView,
      @NonNull Button startDetectionButton, @NonNull TextView statusTextView,
      @NonNull Button stopDetectionButton, @NonNull SeekBar thresholdSeekBar,
      @NonNull TextView thresholdValueTextView, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.anomaliesRecyclerView = anomaliesRecyclerView;
    this.lastUpdateTextView = lastUpdateTextView;
    this.resultTextView = resultTextView;
    this.sensorDataTextView = sensorDataTextView;
    this.startDetectionButton = startDetectionButton;
    this.statusTextView = statusTextView;
    this.stopDetectionButton = stopDetectionButton;
    this.thresholdSeekBar = thresholdSeekBar;
    this.thresholdValueTextView = thresholdValueTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anomaliesRecyclerView;
      RecyclerView anomaliesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (anomaliesRecyclerView == null) {
        break missingId;
      }

      id = R.id.lastUpdateTextView;
      TextView lastUpdateTextView = ViewBindings.findChildViewById(rootView, id);
      if (lastUpdateTextView == null) {
        break missingId;
      }

      id = R.id.resultTextView;
      TextView resultTextView = ViewBindings.findChildViewById(rootView, id);
      if (resultTextView == null) {
        break missingId;
      }

      id = R.id.sensorDataTextView;
      TextView sensorDataTextView = ViewBindings.findChildViewById(rootView, id);
      if (sensorDataTextView == null) {
        break missingId;
      }

      id = R.id.startDetectionButton;
      Button startDetectionButton = ViewBindings.findChildViewById(rootView, id);
      if (startDetectionButton == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.stopDetectionButton;
      Button stopDetectionButton = ViewBindings.findChildViewById(rootView, id);
      if (stopDetectionButton == null) {
        break missingId;
      }

      id = R.id.thresholdSeekBar;
      SeekBar thresholdSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (thresholdSeekBar == null) {
        break missingId;
      }

      id = R.id.thresholdValueTextView;
      TextView thresholdValueTextView = ViewBindings.findChildViewById(rootView, id);
      if (thresholdValueTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, anomaliesRecyclerView,
          lastUpdateTextView, resultTextView, sensorDataTextView, startDetectionButton,
          statusTextView, stopDetectionButton, thresholdSeekBar, thresholdValueTextView,
          titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
